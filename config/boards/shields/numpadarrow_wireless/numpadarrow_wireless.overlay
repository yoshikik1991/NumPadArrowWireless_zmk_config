/*
 * Copyright (c) 2020 Pete Johanson, Richard Jones
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/led/led.h>

/ {
    chosen {
        zmk,kscan = &kscan;
        zmk,underglow = &led_strip;
        zmk,matrix_transform = &transform;
        zephyr,display = &ssd1306_ssd1306_128x32;
    };

    transform: transform {
        compatible = "zmk,matrix-transform";
        rows = <5>;
        columns = <6>;

        map = <
                         RC(0,2) RC(0,3) RC(0,4) RC(0,5) 
        RC(1,0) RC(1,1)  RC(1,2) RC(1,3) RC(1,4) RC(1,5) 
        RC(2,0) RC(2,1)  RC(2,2) RC(2,3) RC(2,4) RC(2,5) 
        RC(3,0) RC(3,1)  RC(3,2) RC(3,3) RC(3,4) RC(3,5)
        RC(4,0) RC(4,1) RC(4,2)  RC(4,3) RC(4,4) RC(4,5) 
        >;
    };

    kscan: kscan {
        compatible = "zmk,kscan-composite";
        label = "KSCAN";
        rows = <5>;
        columns = <6>;

        key {
            kscan = <&kscan0>;
        };
    };

    kscan0: kscan0 {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN_KEY";


        diode-direction = "col2row";
        col-gpios
            = <&io 0  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&io 1  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&io 2  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&io 3  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&io 4  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&io 5  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            ;
        row-gpios
            = <&io 8  (GPIO_ACTIVE_LOW)>
            , <&io 9  (GPIO_ACTIVE_LOW)>
            , <&io 10 (GPIO_ACTIVE_LOW)>
            , <&io 11 (GPIO_ACTIVE_LOW)>
            , <&io 12 (GPIO_ACTIVE_LOW)>
            ;

    };

	ext-power {
		compatible = "zmk,ext-power-generic";
		label = "EXT_POWER";
		control-gpios = <&gpio0 28 GPIO_ACTIVE_LOW>;
	};

};

&pinctrl {
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 1, 11)>;
        };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 1, 11)>;
            low-power-enable;
        };
    };

    i2c0_default: i2c0_default {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 4)>,
                <NRF_PSEL(TWIM_SCL, 0, 5)>;
        };
    };

    i2c0_sleep: i2c0_sleep {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 4)>,
                <NRF_PSEL(TWIM_SCL, 0, 5)>;
            low-power-enable;
        };
    };
};

&i2c0 {
    compatible = "nordic,nrf-twi";
    pinctrl-0 = <&i2c0_default>;
    pinctrl-1 = <&i2c0_sleep>;
    pinctrl-names = "default", "sleep";
    status = "okay";

    io: mcp23017@20 {
        compatible = "microchip,mcp230xx";
        status = "okay";
        gpio-controller;
        reg = <0x20>;
        #gpio-cells = <2>;
        ngpios = <16>;
    };

	ssd1306_ssd1306_128x32: ssd1306@3c {
        label= "OLED";
		compatible = "solomon,ssd1306fb";
		reg = <0x3c>;
		width = <128>;
		height = <32>;
		segment-offset = <0>;
		page-offset = <0>;
		display-offset = <0>;
		multiplex-ratio = <31>;
		segment-remap;
		com-invdir;
		com-sequential;
		prechargep = <0x22>;
	};
};


&spi3 {
  compatible = "nordic,nrf-spim";
  status = "okay";

  pinctrl-0 = <&spi3_default>;
  pinctrl-1 = <&spi3_sleep>;
  pinctrl-names = "default", "sleep";

  led_strip: ws2812@0 {
    compatible = "worldsemi,ws2812-spi";
    label = "WS2812";

    /* SPI */
    reg = <0>; /* ignored, but necessary for SPI bindings */
    spi-max-frequency = <4000000>;

    /* WS2812 */
    chain-length = <27>; /* number of LEDs */
    spi-one-frame = <0x70>;
    spi-zero-frame = <0x40>;
    color-mapping = <LED_COLOR_ID_GREEN
                          LED_COLOR_ID_RED
                          LED_COLOR_ID_BLUE>;
  };
};

/*
 * Copyright (c) 2020 Pete Johanson, Richard Jones
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/led/led.h>
#include <physical_layouts.dtsi>

/ {
    chosen {
        zmk,physical-layout = &physical_layout0;
        zmk,underglow = &led_strip;
        zephyr,display = &oled;
    };

    physical_layout0: physical_layout_0 {
        compatible = "zmk,physical-layout";
        display-name = "default_transform";

        kscan = <&kscan>;
        transform = <&matrix_transform0>;

        keys  //                     w   h    x    y     rot    rx    ry
            = <&key_physical_attrs 100 100  250    0       0     0     0>
            , <&key_physical_attrs 100 100  350    0       0     0     0>
            , <&key_physical_attrs 100 100  450    0       0     0     0>
            , <&key_physical_attrs 100 100  550    0       0     0     0>
            , <&key_physical_attrs 100 100    0  100       0     0     0>
            , <&key_physical_attrs 100 100  100  100       0     0     0>
            , <&key_physical_attrs 100 100  250  100       0     0     0>
            , <&key_physical_attrs 100 100  350  100       0     0     0>
            , <&key_physical_attrs 100 100  450  100       0     0     0>
            , <&key_physical_attrs 100 100  550  100       0     0     0>
            , <&key_physical_attrs 100 100    0  200       0     0     0>
            , <&key_physical_attrs 100 100  100  200       0     0     0>
            , <&key_physical_attrs 100 100  250  200       0     0     0>
            , <&key_physical_attrs 100 100  350  200       0     0     0>
            , <&key_physical_attrs 100 100  450  200       0     0     0>
            , <&key_physical_attrs 100 100  550  200       0     0     0>
            , <&key_physical_attrs 100 100    0  300       0     0     0>
            , <&key_physical_attrs 100 100  100  350       0     0     0>
            , <&key_physical_attrs 100 100  250  300       0     0     0>
            , <&key_physical_attrs 100 100  350  300       0     0     0>
            , <&key_physical_attrs 100 100  450  300       0     0     0>
            , <&key_physical_attrs 100 100  550  300       0     0     0>
            , <&key_physical_attrs 100 100    0  450       0     0     0>
            , <&key_physical_attrs 100 100  100  450       0     0     0>
            , <&key_physical_attrs 100 100  200  450       0     0     0>
            , <&key_physical_attrs 100 100  350  400       0     0     0>
            , <&key_physical_attrs 100 100  450  400       0     0     0>
            , <&key_physical_attrs 100 100  550  400       0     0     0>
            ;
    };

    matrix_transform0: matrix_transform0 {
        compatible = "zmk,matrix-transform";
        rows = <5>;
        columns = <6>;

        map = <
                         RC(0,2) RC(0,3) RC(0,4) RC(0,5) 
        RC(1,0) RC(1,1)  RC(1,2) RC(1,3) RC(1,4) RC(1,5) 
        RC(2,0) RC(2,1)  RC(2,2) RC(2,3) RC(2,4) RC(2,5) 
        RC(3,0) RC(3,1)  RC(3,2) RC(3,3) RC(3,4) RC(3,5)
        RC(4,0) RC(4,1) RC(4,2)  RC(4,3) RC(4,4) RC(4,5) 
        >;
    };

    kscan: kscan {
        compatible = "zmk,kscan-composite";
        label = "KSCAN";
        rows = <9>;
        columns = <6>;

        key {
            kscan = <&kscan0>;
        };

    };

    kscan0: kscan0 {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN_KEY";


        diode-direction = "row2col";
        col-gpios
            = <&io 0  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&io 1  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&io 2  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&io 3  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&io 4  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&io 5  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            ;
        row-gpios
            = <&io 8  (GPIO_ACTIVE_LOW)>
            , <&io 9  (GPIO_ACTIVE_LOW)>
            , <&io 10 (GPIO_ACTIVE_LOW)>
            , <&io 11 (GPIO_ACTIVE_LOW)>
            , <&io 12 (GPIO_ACTIVE_LOW)>
            ;

    };

    EXT_POWER {
        compatible = "zmk,ext-power-generic";
        control-gpios = <&xiao_d 2 GPIO_ACTIVE_LOW>;
        init-delay-ms = <50>;
    };

    left_encoder: encoder_left {
        compatible = "alps,ec11";
        a-gpios = <&xiao_d 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&xiao_d 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <12>;
        status = "okay";
    };

    sensors: sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder>;
        triggers-per-rotation = <10>;
    };

};


&pinctrl {
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 1, 11)>;
        };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 1, 11)>;
            low-power-enable;
        };
    };

    i2c0_default: i2c0_default {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 4)>,
                <NRF_PSEL(TWIM_SCL, 0, 5)>;
        };
    };

    i2c0_sleep: i2c0_sleep {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 4)>,
                <NRF_PSEL(TWIM_SCL, 0, 5)>;
            low-power-enable;
        };
    };

};

&i2c0 {
    compatible = "nordic,nrf-twi";
    pinctrl-0 = <&i2c0_default>;
    pinctrl-1 = <&i2c0_sleep>;
    pinctrl-names = "default", "sleep";
    status = "okay";

    io: mcp23017@20 {
        compatible = "microchip,mcp230xx";
        status = "okay";
        gpio-controller;
        reg = <0x20>;
        #gpio-cells = <2>;
        ngpios = <16>;
    };

    oled: ssd1306@3c {
        compatible = "solomon,ssd1306fb";
        reg = <0x3c>;
        width = <128>;
        height = <32>;
        segment-offset = <0>;
        page-offset = <0>;
        display-offset = <0>;
        multiplex-ratio = <31>;
        //segment-remap;
        //com-invdir;
        com-sequential;
        inversion-on;
        prechargep = <0x22>;
    };

};


&spi3 {
  compatible = "nordic,nrf-spim";
  status = "okay";

  pinctrl-0 = <&spi3_default>;
  pinctrl-1 = <&spi3_sleep>;
  pinctrl-names = "default", "sleep";

  led_strip: ws2812@0 {
    compatible = "worldsemi,ws2812-spi";
    label = "WS2812";

    /* SPI */
    reg = <0>; /* ignored, but necessary for SPI bindings */
    spi-max-frequency = <4000000>;

    /* WS2812 */
    chain-length = <27>; /* number of LEDs */
    spi-one-frame = <0x70>;
    spi-zero-frame = <0x40>;
    color-mapping = <LED_COLOR_ID_GREEN
                          LED_COLOR_ID_RED
                          LED_COLOR_ID_BLUE>;
  };
};

&xiao_serial { status = "disabled"; };